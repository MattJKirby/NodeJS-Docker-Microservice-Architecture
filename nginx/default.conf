upstream mfe-host-service {
    server mfe-host-service:8000; # server name is same as the service name used in docker-compose file                      # port on which the service is running...NOT the exposed port(the RHS port in docker-compose ports attr.)
}

upstream home-service {
    server home-service:3000; # server name is same as the service name used in docker-compose file                      # port on which the service is running...NOT the exposed port(the RHS port in docker-compose ports attr.)
}

upstream registry-service {
    server registry-service:3000; # server name is same as the service name used in docker-compose file                      # port on which the service is running...NOT the exposed port(the RHS port in docker-compose ports attr.)
}

server {
    listen 80;

    location /app/ {
        rewrite ^/host-service/(.*) /$1 break; # works for both /server1 and /server1/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass http://mfe-host-service/;
    }
    
    location /api/home-service/ {
        rewrite ^/home-service/(.*) /$1 break; # works for both /server1 and /server1/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass http://home-service/;
    }

    location /api/registry-service/ {
        rewrite ^/home-service/(.*) /$1 break; # works for both /server1 and /server1/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass http://registry-service/;
    }
 
}